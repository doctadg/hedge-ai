generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Corrected User model after introspection issues
model User {
  id            String  @id @default(cuid()) // Added default CUID generator
  walletAddress String? @unique @map("walletAddress") // Explicit map, ensure unique
  isPremium     Boolean @default(false) @map("isPremium") // Explicit map
  isAdmin       Boolean @default(false) @map("isAdmin") // Explicit map
  // Removed email, name, createdAt, updatedAt as they are not consistently used/defined
  conversations Conversation[]
}

model Conversation {
  id                    String        @id @default(cuid())
  title                 String
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  userId                String        // Made mandatory: Matches User.id type (String)
  venymioConversationId String?       @unique
  messages              ChatMessage[]
  user                  User          @relation(fields: [userId], references: [id]) // Made mandatory
}

model ChatMessage {
  id             String       @id @default(cuid())
  content        String       @db.Text // Ensure Text type for potentially long content
  isUserMessage  Boolean
  createdAt      DateTime     @default(now())
  conversationId String
  toolUsed       String?
  toolStatus     String?
  thoughts       String?      @db.Text // Ensure Text type
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
}
